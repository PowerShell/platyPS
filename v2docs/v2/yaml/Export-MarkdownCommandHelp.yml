metadata:
  document type: cmdlet
  external help file: Microsoft.PowerShell.PlatyPS.dll-Help.xml
  HelpUri: ''
  Locale: en-US
  Module Name: Microsoft.PowerShell.PlatyPS
  ms.date: 07/10/2024
  PlatyPS schema version: 2024-05-01
  title: Export-MarkdownCommandHelp
title: Export-MarkdownCommandHelp
synopsis: 'Exports a **CommandHelp** object to a markdown file.'
syntaxes:
- commandName: Export-MarkdownCommandHelp
  parameterSetName: __AllParameterSets
  isDefault: false
  parameters:
  - '[-Command] <CommandHelp[]>'
  - '[-Encoding <Encoding>]'
  - '[-Force]'
  - '[-OutputFolder <string>]'
  - '[-Metadata <hashtable>]'
  - '[-WhatIf]'
  - '[-Confirm]'
aliases:
description: |-
  This command exports a **CommandHelp** object to a markdown file. You can add metadata frontmatter
  to the markdown file by using the **Metadata** parameter. You can get a **CommandHelp** object by
  using the `Export-MarkdownCommandHelp` cmdlet or one of the `Import-*` cmdlets.
examples:
- title: Example 1 - Convert old Markdown help content to the new format
  description: >-
    This example imports Markdown help in the old format from the `.\v1` folder and exports it to the

    `.\v2` folder in the new format.


    ```powershell

    $chobj = Import-MarkdownCommandHelp -Path .\v1\Export-YamlModuleFile.md

    Export-MarkdownCommandHelp -Command $chobj -OutputFolder .\v2

    ```


    ```Output
        Directory: D:\Git\PS-Src\platyPS\v2docs\v2

    Mode                 LastWriteTime         Length Name

    ----                 -------------         ------ ----

    -a---           5/20/2024  3:33 PM           2892 Export-YamlModuleFile.md

    ```
- title: Example 2 - Convert a folder of old Markdown help content to the new format
  description: >-
    This example imports Markdown help in the old format from the `.\v1` folder and exports it to the

    `.\v1\new` folder in the new format. If necessary, `Export-MarkdownCommandHelp` creates the

    destination folders. The new markdown files are written to folder named for the module they belong

    to.


    ```powershell

    $mdfiles = Measure-PlatyPSMarkdown -Path .\v1\Microsoft.PowerShell.PlatyPS\*.md

    $mdfiles | Where-Object Filetype -match 'CommandHelp' |
        Import-MarkdownCommandHelp -Path {$_.FilePath} |
        Export-MarkdownCommandHelp -OutputFolder .\v1\new
    ```


    ```Output
        Directory: D:\Git\PS-Src\platyPS\v2docs\v1\new\Microsoft.PowerShell.PlatyPS

    Mode                 LastWriteTime         Length Name

    ----                 -------------         ------ ----

    -a---           8/26/2024  3:30 PM           3194 Compare-CommandHelp.md

    -a---           8/26/2024  3:30 PM           4282 Export-MamlCommandHelp.md

    -a---           8/26/2024  3:30 PM           6401 Export-MarkdownCommandHelp.md

    -a---           8/26/2024  3:30 PM           4874 Export-MarkdownModuleFile.md

    -a---           8/26/2024  3:30 PM           6429 Export-YamlCommandHelp.md

    -a---           8/26/2024  3:30 PM           5601 Export-YamlModuleFile.md

    -a---           8/26/2024  3:30 PM           2724 Import-MamlHelp.md

    -a---           8/26/2024  3:30 PM           3733 Import-MarkdownCommandHelp.md

    -a---           8/26/2024  3:30 PM           3870 Import-MarkdownModuleFile.md

    -a---           8/26/2024  3:30 PM           3907 Import-YamlCommandHelp.md

    -a---           8/26/2024  3:30 PM           3477 Import-YamlModuleFile.md

    -a---           8/26/2024  3:30 PM           2088 Measure-PlatyPSMarkdown.md

    -a---           8/26/2024  3:30 PM           4748 New-CommandHelp.md

    -a---           8/26/2024  3:30 PM           8647 New-MarkdownCommandHelp.md

    -a---           8/26/2024  3:30 PM           5086 New-MarkdownModuleFile.md

    -a---           8/26/2024  3:30 PM           3080 Test-MarkdownCommandHelp.md

    -a---           8/26/2024  3:30 PM           3041 Update-CommandHelp.md

    -a---           8/26/2024  3:30 PM           3981 Update-MarkdownCommandHelp.md

    -a---           8/26/2024  3:30 PM           5548 Update-MarkdownModuleFile.md

    ```
parameters:
- name: Command
  type: Microsoft.PowerShell.PlatyPS.Model.CommandHelp[]
  description: >-
    The **CommandHelp** object to export. You can pass the **CommandHelp** object on the pipeline or by

    using the **Command** parameter.
  parameterValue: []
  defaultValue: ''
  supportsWildcards: false
  isDynamic: false
  aliases: ''
  dontShow: false
  acceptedValues: []
  parameterSets:
  - name: (All)
    position: 0
    isRequired: true
    valueFromPipeline: true
    valueFromPipelineByPropertyName: false
    valueFromRemainingArguments: false
  helpMessage: ''
- name: Confirm
  type: System.Management.Automation.SwitchParameter
  description: Prompts you for confirmation before running the cmdlet.
  parameterValue: []
  defaultValue: ''
  supportsWildcards: false
  isDynamic: false
  aliases: cf
  dontShow: false
  acceptedValues: []
  parameterSets:
  - &o0
    name: (All)
    position: Named
    isRequired: false
    valueFromPipeline: false
    valueFromPipelineByPropertyName: false
    valueFromRemainingArguments: false
  helpMessage: ''
- name: Encoding
  type: System.Text.Encoding
  description: >-
    The encoding to use when writing the markdown file. If no value is specified, encoding defaults to

    the value of the `$OutputEncoding` preference variable.
  parameterValue: []
  defaultValue: ''
  supportsWildcards: false
  isDynamic: false
  aliases: ''
  dontShow: false
  acceptedValues: []
  parameterSets:
  - *o0
  helpMessage: ''
- name: Force
  type: System.Management.Automation.SwitchParameter
  description: Use the **Force** parameter to overwrite the output file if it already exists.
  parameterValue: []
  defaultValue: ''
  supportsWildcards: false
  isDynamic: false
  aliases: ''
  dontShow: false
  acceptedValues: []
  parameterSets:
  - *o0
  helpMessage: ''
- name: Metadata
  type: System.Collections.Hashtable
  description: >-
    The metadata to add to the frontmatter of the markdown file. The metadata is a hashtable where the

    you specify the key and value pairs to add to the frontmatter. New key names are added to the

    existing frontmatter. The values of existing keys are overwritten.
  parameterValue: []
  defaultValue: ''
  supportsWildcards: false
  isDynamic: false
  aliases: ''
  dontShow: false
  acceptedValues: []
  parameterSets:
  - *o0
  helpMessage: ''
- name: OutputFolder
  type: System.String
  description: The folder where the markdown file is saved. If the folder doesn't exist, it's created.
  parameterValue: []
  defaultValue: ''
  supportsWildcards: false
  isDynamic: false
  aliases: ''
  dontShow: false
  acceptedValues: []
  parameterSets:
  - *o0
  helpMessage: ''
- name: WhatIf
  type: System.Management.Automation.SwitchParameter
  description: Shows what would happen if the cmdlet runs. The cmdlet is not run.
  parameterValue: []
  defaultValue: ''
  supportsWildcards: false
  isDynamic: false
  aliases: wi
  dontShow: false
  acceptedValues: []
  parameterSets:
  - *o0
  helpMessage: ''

- name: CommonParameters
  description: |-
    This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable,
    -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable,
    -ProgressAction, -Verbose, -WarningAction, and -WarningVariable. For more information, see
    [about_CommonParameters](https://go.microsoft.com/fwlink/?LinkID=113216).
inputs:
- name: Microsoft.PowerShell.PlatyPS.Model.CommandHelp
  description:
outputs:
- name: System.IO.FileInfo
  description:
notes:
links:
- text: 'Export-YamlCommandHelp'
  href: Export-YamlCommandHelp.md
- text: 'Import-MarkdownCommandHelp'
  href: Import-MarkdownCommandHelp.md
- text: 'Import-YamlCommandHelp'
  href: Import-YamlCommandHelp.md
