<?xml version="1.0" encoding="utf-8"?>
<helpItems xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" schema="maml" xmlns="http://msh">
  <command:command>
    <command:details>
      <command:name>Get-Date</command:name>
      <maml:description>
        <maml:para>Gets the current date and time.</maml:para>
      </maml:description>
      <command:verb>Get</command:verb>
      <command:noun>Date</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The `Get-Date` cmdlet gets a **DateTime** object that represents the current date or a date that you specify. `Get-Date` can format the date and time in several .NET and UNIX formats. You can use `Get-Date` to generate a date or time character string, and then send the string to other cmdlets or programs.</maml:para>
      <maml:para>`Get-Date` uses the current culture settings of the operating system to determine how the output is formatted. To view your computer's settings, use `(Get-Culture).DateTimeFormat`.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-Date</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>AsUTC</maml:name>
          <maml:description>
            <maml:para>Converts the date value to the equivalent time in UTC.</maml:para>
            <maml:para>This parameter was introduced in PowerShell 7.1.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Date</maml:name>
          <maml:description>
            <maml:para>Specifies a date and time. Time is optional and if not specified, returns 00:00:00. Enter the date
and time in a format that is standard for the currently selected locale. You can change the
current locale using the `Set-Culture` cmdlet.</maml:para>
            <maml:para>For example, in US English:</maml:para>
            <maml:para>`Get-Date -Date "6/25/2019 12:30:22"` returns **Tuesday, June 25, 2019 12:30:22**</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.DateTime</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Day</maml:name>
          <maml:description>
            <maml:para>Specifies the day of the month that is displayed. Enter a value from 1 to 31.</maml:para>
            <maml:para>If the specified value is greater than the number of days in a month, PowerShell adds the number of
days to the month. For example, `Get-Date -Month 4 -Day 31` displays **May 1**, not **April 31**.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>DisplayHint</maml:name>
          <maml:description>
            <maml:para>Determines which elements of the date and time are displayed.</maml:para>
            <maml:para>The accepted values are as follows:</maml:para>
            <maml:para>- **Date**: displays only the date
- **Time**: displays only the time
- **DateTime**: displays the date and time</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Microsoft.PowerShell.Commands.DisplayHintType</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Format</maml:name>
          <maml:description>
            <maml:para>Displays the date and time in the Microsoft .NET Framework format indicated by the format specifier.
The **Format** parameter outputs a **String** object.</maml:para>
            <maml:para>For a list of available .NET format specifiers, see
[Custom date and time format strings](/dotnet/standard/base-types/custom-date-and-time-format-strings).</maml:para>
            <maml:para>When the **Format** parameter is used, `Get-Date` only gets the **DateTime** object's properties
necessary to display the date. As a result, some of the properties and methods of **DateTime**
objects might not be available.</maml:para>
            <maml:para>Starting in PowerShell 5.0, you can use the following additional formats as values for the
**Format** parameter.</maml:para>
            <maml:para>- **FileDate**. A file or path-friendly representation of the current date in local time. The format
  is `yyyyMMdd` (case-sensitive, using a 4-digit year, 2-digit month, and 2-digit day). For example:
  20190627.</maml:para>
            <maml:para>- **FileDateUniversal**. A file or path-friendly representation of the current date in universal
  time (UTC). The format is `yyyyMMddZ` (case-sensitive, using a 4-digit year, 2-digit month,
  2-digit day, and the letter `Z` as the UTC indicator). For example: 20190627Z.</maml:para>
            <maml:para>- **FileDateTime**. A file or path-friendly representation of the current date and time in local
  time, in 24-hour format. The format is `yyyyMMddTHHmmssffff` (case-sensitive, using a 4-digit
  year, 2-digit month, 2-digit day, the letter `T` as a time separator, 2-digit hour, 2-digit
  minute, 2-digit second, and 4-digit millisecond). For example: 20190627T0840107271.</maml:para>
            <maml:para>- **FileDateTimeUniversal**. A file or path-friendly representation of the current date and time in
  universal time (UTC), in 24-hour format. The format is `yyyyMMddTHHmmssffffZ` (case-sensitive,
  using a 4-digit year, 2-digit month, 2-digit day, the letter `T` as a time separator, 2-digit
  hour, 2-digit minute, 2-digit second, 4-digit millisecond, and the letter `Z` as the UTC
  indicator). For example: 20190627T1540500718Z.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Hour</maml:name>
          <maml:description>
            <maml:para>Specifies the hour that is displayed. Enter a value from 0 to 23.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Millisecond</maml:name>
          <maml:description>
            <maml:para>Specifies the milliseconds in the date. Enter a value from 0 to 999.</maml:para>
            <maml:para>This parameter was introduced in PowerShell 3.0.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Minute</maml:name>
          <maml:description>
            <maml:para>Specifies the minute that is displayed. Enter a value from 0 to 59.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Month</maml:name>
          <maml:description>
            <maml:para>Specifies the month that is displayed. Enter a value from 1 to 12.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Second</maml:name>
          <maml:description>
            <maml:para>Specifies the second that is displayed. Enter a value from 0 to 59.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Year</maml:name>
          <maml:description>
            <maml:para>Specifies the year that is displayed. Enter a value from 1 to 9999.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-Date</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>AsUTC</maml:name>
          <maml:description>
            <maml:para>Converts the date value to the equivalent time in UTC.</maml:para>
            <maml:para>This parameter was introduced in PowerShell 7.1.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Date</maml:name>
          <maml:description>
            <maml:para>Specifies a date and time. Time is optional and if not specified, returns 00:00:00. Enter the date
and time in a format that is standard for the currently selected locale. You can change the
current locale using the `Set-Culture` cmdlet.</maml:para>
            <maml:para>For example, in US English:</maml:para>
            <maml:para>`Get-Date -Date "6/25/2019 12:30:22"` returns **Tuesday, June 25, 2019 12:30:22**</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.DateTime</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Day</maml:name>
          <maml:description>
            <maml:para>Specifies the day of the month that is displayed. Enter a value from 1 to 31.</maml:para>
            <maml:para>If the specified value is greater than the number of days in a month, PowerShell adds the number of
days to the month. For example, `Get-Date -Month 4 -Day 31` displays **May 1**, not **April 31**.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>DisplayHint</maml:name>
          <maml:description>
            <maml:para>Determines which elements of the date and time are displayed.</maml:para>
            <maml:para>The accepted values are as follows:</maml:para>
            <maml:para>- **Date**: displays only the date
- **Time**: displays only the time
- **DateTime**: displays the date and time</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Microsoft.PowerShell.Commands.DisplayHintType</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Hour</maml:name>
          <maml:description>
            <maml:para>Specifies the hour that is displayed. Enter a value from 0 to 23.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Millisecond</maml:name>
          <maml:description>
            <maml:para>Specifies the milliseconds in the date. Enter a value from 0 to 999.</maml:para>
            <maml:para>This parameter was introduced in PowerShell 3.0.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Minute</maml:name>
          <maml:description>
            <maml:para>Specifies the minute that is displayed. Enter a value from 0 to 59.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Month</maml:name>
          <maml:description>
            <maml:para>Specifies the month that is displayed. Enter a value from 1 to 12.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Second</maml:name>
          <maml:description>
            <maml:para>Specifies the second that is displayed. Enter a value from 0 to 59.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>UFormat</maml:name>
          <maml:description>
            <maml:para>Displays the date and time in UNIX format. The **UFormat** parameter outputs a string object.</maml:para>
            <maml:para>**UFormat** specifiers are preceded by a percent sign (`%`), for example, `%m`, `%d`, and `%Y`. The
[Notes](#notes) section contains a table of valid **UFormat specifiers**.</maml:para>
            <maml:para>When the **UFormat** parameter is used, `Get-Date` only gets the **DateTime** object's properties
necessary to display the date. As a result, some of the properties and methods of **DateTime**
objects might not be available.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Year</maml:name>
          <maml:description>
            <maml:para>Specifies the year that is displayed. Enter a value from 1 to 9999.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-Date</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>AsUTC</maml:name>
          <maml:description>
            <maml:para>Converts the date value to the equivalent time in UTC.</maml:para>
            <maml:para>This parameter was introduced in PowerShell 7.1.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Day</maml:name>
          <maml:description>
            <maml:para>Specifies the day of the month that is displayed. Enter a value from 1 to 31.</maml:para>
            <maml:para>If the specified value is greater than the number of days in a month, PowerShell adds the number of
days to the month. For example, `Get-Date -Month 4 -Day 31` displays **May 1**, not **April 31**.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>DisplayHint</maml:name>
          <maml:description>
            <maml:para>Determines which elements of the date and time are displayed.</maml:para>
            <maml:para>The accepted values are as follows:</maml:para>
            <maml:para>- **Date**: displays only the date
- **Time**: displays only the time
- **DateTime**: displays the date and time</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Microsoft.PowerShell.Commands.DisplayHintType</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Format</maml:name>
          <maml:description>
            <maml:para>Displays the date and time in the Microsoft .NET Framework format indicated by the format specifier.
The **Format** parameter outputs a **String** object.</maml:para>
            <maml:para>For a list of available .NET format specifiers, see
[Custom date and time format strings](/dotnet/standard/base-types/custom-date-and-time-format-strings).</maml:para>
            <maml:para>When the **Format** parameter is used, `Get-Date` only gets the **DateTime** object's properties
necessary to display the date. As a result, some of the properties and methods of **DateTime**
objects might not be available.</maml:para>
            <maml:para>Starting in PowerShell 5.0, you can use the following additional formats as values for the
**Format** parameter.</maml:para>
            <maml:para>- **FileDate**. A file or path-friendly representation of the current date in local time. The format
  is `yyyyMMdd` (case-sensitive, using a 4-digit year, 2-digit month, and 2-digit day). For example:
  20190627.</maml:para>
            <maml:para>- **FileDateUniversal**. A file or path-friendly representation of the current date in universal
  time (UTC). The format is `yyyyMMddZ` (case-sensitive, using a 4-digit year, 2-digit month,
  2-digit day, and the letter `Z` as the UTC indicator). For example: 20190627Z.</maml:para>
            <maml:para>- **FileDateTime**. A file or path-friendly representation of the current date and time in local
  time, in 24-hour format. The format is `yyyyMMddTHHmmssffff` (case-sensitive, using a 4-digit
  year, 2-digit month, 2-digit day, the letter `T` as a time separator, 2-digit hour, 2-digit
  minute, 2-digit second, and 4-digit millisecond). For example: 20190627T0840107271.</maml:para>
            <maml:para>- **FileDateTimeUniversal**. A file or path-friendly representation of the current date and time in
  universal time (UTC), in 24-hour format. The format is `yyyyMMddTHHmmssffffZ` (case-sensitive,
  using a 4-digit year, 2-digit month, 2-digit day, the letter `T` as a time separator, 2-digit
  hour, 2-digit minute, 2-digit second, 4-digit millisecond, and the letter `Z` as the UTC
  indicator). For example: 20190627T1540500718Z.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Hour</maml:name>
          <maml:description>
            <maml:para>Specifies the hour that is displayed. Enter a value from 0 to 23.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Millisecond</maml:name>
          <maml:description>
            <maml:para>Specifies the milliseconds in the date. Enter a value from 0 to 999.</maml:para>
            <maml:para>This parameter was introduced in PowerShell 3.0.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Minute</maml:name>
          <maml:description>
            <maml:para>Specifies the minute that is displayed. Enter a value from 0 to 59.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Month</maml:name>
          <maml:description>
            <maml:para>Specifies the month that is displayed. Enter a value from 1 to 12.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Second</maml:name>
          <maml:description>
            <maml:para>Specifies the second that is displayed. Enter a value from 0 to 59.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>UnixTimeSeconds</maml:name>
          <maml:description>
            <maml:para>Date and time represented in seconds since January 1, 1970, 0:00:00.</maml:para>
            <maml:para>This parameter was introduced in PowerShell 7.1.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Int64</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Year</maml:name>
          <maml:description>
            <maml:para>Specifies the year that is displayed. Enter a value from 1 to 9999.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-Date</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>AsUTC</maml:name>
          <maml:description>
            <maml:para>Converts the date value to the equivalent time in UTC.</maml:para>
            <maml:para>This parameter was introduced in PowerShell 7.1.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Day</maml:name>
          <maml:description>
            <maml:para>Specifies the day of the month that is displayed. Enter a value from 1 to 31.</maml:para>
            <maml:para>If the specified value is greater than the number of days in a month, PowerShell adds the number of
days to the month. For example, `Get-Date -Month 4 -Day 31` displays **May 1**, not **April 31**.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>DisplayHint</maml:name>
          <maml:description>
            <maml:para>Determines which elements of the date and time are displayed.</maml:para>
            <maml:para>The accepted values are as follows:</maml:para>
            <maml:para>- **Date**: displays only the date
- **Time**: displays only the time
- **DateTime**: displays the date and time</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Microsoft.PowerShell.Commands.DisplayHintType</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Hour</maml:name>
          <maml:description>
            <maml:para>Specifies the hour that is displayed. Enter a value from 0 to 23.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Millisecond</maml:name>
          <maml:description>
            <maml:para>Specifies the milliseconds in the date. Enter a value from 0 to 999.</maml:para>
            <maml:para>This parameter was introduced in PowerShell 3.0.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Minute</maml:name>
          <maml:description>
            <maml:para>Specifies the minute that is displayed. Enter a value from 0 to 59.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Month</maml:name>
          <maml:description>
            <maml:para>Specifies the month that is displayed. Enter a value from 1 to 12.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Second</maml:name>
          <maml:description>
            <maml:para>Specifies the second that is displayed. Enter a value from 0 to 59.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>UFormat</maml:name>
          <maml:description>
            <maml:para>Displays the date and time in UNIX format. The **UFormat** parameter outputs a string object.</maml:para>
            <maml:para>**UFormat** specifiers are preceded by a percent sign (`%`), for example, `%m`, `%d`, and `%Y`. The
[Notes](#notes) section contains a table of valid **UFormat specifiers**.</maml:para>
            <maml:para>When the **UFormat** parameter is used, `Get-Date` only gets the **DateTime** object's properties
necessary to display the date. As a result, some of the properties and methods of **DateTime**
objects might not be available.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>UnixTimeSeconds</maml:name>
          <maml:description>
            <maml:para>Date and time represented in seconds since January 1, 1970, 0:00:00.</maml:para>
            <maml:para>This parameter was introduced in PowerShell 7.1.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Int64</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Year</maml:name>
          <maml:description>
            <maml:para>Specifies the year that is displayed. Enter a value from 1 to 9999.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>AsUTC</maml:name>
        <maml:description>
          <maml:para>Converts the date value to the equivalent time in UTC.</maml:para>
          <maml:para>This parameter was introduced in PowerShell 7.1.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Date</maml:name>
        <maml:description>
          <maml:para>Specifies a date and time. Time is optional and if not specified, returns 00:00:00. Enter the date
and time in a format that is standard for the currently selected locale. You can change the
current locale using the `Set-Culture` cmdlet.</maml:para>
          <maml:para>For example, in US English:</maml:para>
          <maml:para>`Get-Date -Date "6/25/2019 12:30:22"` returns **Tuesday, June 25, 2019 12:30:22**</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.DateTime</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>Day</maml:name>
        <maml:description>
          <maml:para>Specifies the day of the month that is displayed. Enter a value from 1 to 31.</maml:para>
          <maml:para>If the specified value is greater than the number of days in a month, PowerShell adds the number of
days to the month. For example, `Get-Date -Month 4 -Day 31` displays **May 1**, not **April 31**.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>DisplayHint</maml:name>
        <maml:description>
          <maml:para>Determines which elements of the date and time are displayed.</maml:para>
          <maml:para>The accepted values are as follows:</maml:para>
          <maml:para>- **Date**: displays only the date
- **Time**: displays only the time
- **DateTime**: displays the date and time</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Microsoft.PowerShell.Commands.DisplayHintType</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>Format</maml:name>
        <maml:description>
          <maml:para>Displays the date and time in the Microsoft .NET Framework format indicated by the format specifier.
The **Format** parameter outputs a **String** object.</maml:para>
          <maml:para>For a list of available .NET format specifiers, see
[Custom date and time format strings](/dotnet/standard/base-types/custom-date-and-time-format-strings).</maml:para>
          <maml:para>When the **Format** parameter is used, `Get-Date` only gets the **DateTime** object's properties
necessary to display the date. As a result, some of the properties and methods of **DateTime**
objects might not be available.</maml:para>
          <maml:para>Starting in PowerShell 5.0, you can use the following additional formats as values for the
**Format** parameter.</maml:para>
          <maml:para>- **FileDate**. A file or path-friendly representation of the current date in local time. The format
  is `yyyyMMdd` (case-sensitive, using a 4-digit year, 2-digit month, and 2-digit day). For example:
  20190627.</maml:para>
          <maml:para>- **FileDateUniversal**. A file or path-friendly representation of the current date in universal
  time (UTC). The format is `yyyyMMddZ` (case-sensitive, using a 4-digit year, 2-digit month,
  2-digit day, and the letter `Z` as the UTC indicator). For example: 20190627Z.</maml:para>
          <maml:para>- **FileDateTime**. A file or path-friendly representation of the current date and time in local
  time, in 24-hour format. The format is `yyyyMMddTHHmmssffff` (case-sensitive, using a 4-digit
  year, 2-digit month, 2-digit day, the letter `T` as a time separator, 2-digit hour, 2-digit
  minute, 2-digit second, and 4-digit millisecond). For example: 20190627T0840107271.</maml:para>
          <maml:para>- **FileDateTimeUniversal**. A file or path-friendly representation of the current date and time in
  universal time (UTC), in 24-hour format. The format is `yyyyMMddTHHmmssffffZ` (case-sensitive,
  using a 4-digit year, 2-digit month, 2-digit day, the letter `T` as a time separator, 2-digit
  hour, 2-digit minute, 2-digit second, 4-digit millisecond, and the letter `Z` as the UTC
  indicator). For example: 20190627T1540500718Z.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>Hour</maml:name>
        <maml:description>
          <maml:para>Specifies the hour that is displayed. Enter a value from 0 to 23.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>Millisecond</maml:name>
        <maml:description>
          <maml:para>Specifies the milliseconds in the date. Enter a value from 0 to 999.</maml:para>
          <maml:para>This parameter was introduced in PowerShell 3.0.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>Minute</maml:name>
        <maml:description>
          <maml:para>Specifies the minute that is displayed. Enter a value from 0 to 59.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>Month</maml:name>
        <maml:description>
          <maml:para>Specifies the month that is displayed. Enter a value from 1 to 12.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>Second</maml:name>
        <maml:description>
          <maml:para>Specifies the second that is displayed. Enter a value from 0 to 59.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>UFormat</maml:name>
        <maml:description>
          <maml:para>Displays the date and time in UNIX format. The **UFormat** parameter outputs a string object.</maml:para>
          <maml:para>**UFormat** specifiers are preceded by a percent sign (`%`), for example, `%m`, `%d`, and `%Y`. The
[Notes](#notes) section contains a table of valid **UFormat specifiers**.</maml:para>
          <maml:para>When the **UFormat** parameter is used, `Get-Date` only gets the **DateTime** object's properties
necessary to display the date. As a result, some of the properties and methods of **DateTime**
objects might not be available.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>UnixTimeSeconds</maml:name>
        <maml:description>
          <maml:para>Date and time represented in seconds since January 1, 1970, 0:00:00.</maml:para>
          <maml:para>This parameter was introduced in PowerShell 7.1.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.Int64</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>Year</maml:name>
        <maml:description>
          <maml:para>Specifies the year that is displayed. Enter a value from 1 to 9999.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Int32</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.DateTime</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a **DateTime** object to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.DateTime</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>By default, this cmdlet returns a **DateTime** object.

When a **DateTime** object is sent down the pipeline to a cmdlet such as `Add-Content` that expects
string input, PowerShell converts the object to a **String** object.

The `ToString()` converts a **DateTime** object to a **String** using the current culture setting.
However, PowerShell expression interpretation always uses the invariant culture setting. To see how
invariant culture is different, see [Example 11](#example-11-show-invariant-culture).

To display an object's properties and methods, send the object down the pipeline to `Get-Member`.
For example, `Get-Date | Get-Member`.</maml:para>
        </maml:description>
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>When you use the **Format** or **UFormat** parameters, this cmdlet returns **String** objects.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet />
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1: Example 1: Get the current date and time ---------</maml:title>
        <maml:introduction>
          <maml:para>In this example, `Get-Date` displays the current system date and time. The output is in the
long-date and long-time formats.</maml:para>
          <maml:para>```powershell
Get-Date
```</maml:para>
          <maml:para>```Output
Tuesday, June 25, 2019 14:53:32
```</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
      <command:example>
        <maml:title>--------- Example 2: Example 2: Get elements of the current date and time ---------</maml:title>
        <maml:introduction>
          <maml:para>This example shows how to use `Get-Date` to get either the date or time element. The parameter uses
the arguments **Date**, **Time**, or **DateTime**.</maml:para>
          <maml:para>```powershell
Get-Date -DisplayHint Date
```</maml:para>
          <maml:para>```Output
Tuesday, June 25, 2019
```</maml:para>
          <maml:para>`Get-Date` uses the **DisplayHint** parameter with the **Date** argument to get only the date.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
      <command:example>
        <maml:title>--------- Example 3: Example 3: Get the date and time with a .NET format specifier ---------</maml:title>
        <maml:introduction>
          <maml:para>In this example, a .NET format specifier is used to customize the output's format. The output is a
**String** object.</maml:para>
          <maml:para>```powershell
Get-Date -Format "dddd MM/dd/yyyy HH:mm K"
```</maml:para>
          <maml:para>```Output
Tuesday 06/25/2019 16:17 -07:00
```</maml:para>
          <maml:para>`Get-Date` uses the **Format** parameter to specify several format specifiers.</maml:para>
          <maml:para>The .NET format specifiers used in this example are defined as follows:</maml:para>
          <maml:para>| Specifier |                      Definition                       |
| --------- | ----------------------------------------------------- |
| `dddd`    | Day of the week - full name                           |
| `MM`      | Month number                                          |
| `dd`      | Day of the month - 2 digits                           |
| `yyyy`    | Year in 4-digit format                                |
| `HH:mm`   | Time in 24-hour format - no seconds                   |
| `K`       | Time zone offset from Universal Time Coordinate (UTC) |</maml:para>
          <maml:para>For more information about .NET format specifiers, see
[Custom date and time format strings](/dotnet/standard/base-types/custom-date-and-time-format-strings).</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
      <command:example>
        <maml:title>--------- Example 4: Example 4: Get the date and time with a UFormat specifier ---------</maml:title>
        <maml:introduction>
          <maml:para>In this example, several **UFormat** format specifiers are used to customize the output's format.
The output is a **String** object.</maml:para>
          <maml:para>```powershell
Get-Date -UFormat "%A %m/%d/%Y %R %Z"
```</maml:para>
          <maml:para>```Output
Tuesday 06/25/2019 16:19 -07
```</maml:para>
          <maml:para>`Get-Date` uses the **UFormat** parameter to specify several format specifiers.</maml:para>
          <maml:para>The **UFormat** format specifiers used in this example are defined as follows:</maml:para>
          <maml:para>| Specifier |                      Definition                       |
| --------- | ----------------------------------------------------- |
| `%A`      | Day of the week - full name                           |
| `%m`      | Month number                                          |
| `%d`      | Day of the month - 2 digits                           |
| `%Y`      | Year in 4-digit format                                |
| `%R`      | Time in 24-hour format - no seconds                   |
| `%Z`      | Time zone offset from Universal Time Coordinate (UTC) |</maml:para>
          <maml:para>For a list of valid **UFormat** format specifiers, see the [Notes](#notes) section.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
      <command:example>
        <maml:title>--------- Example 5: Example 5: Get a date's day of the year ---------</maml:title>
        <maml:introduction>
          <maml:para>In this example, a property is used to get the numeric day of the year.</maml:para>
          <maml:para>The Gregorian calendar has 365 days, except for leap years that have 366 days. For example, December
31, 2020 is day 366.</maml:para>
          <maml:para>```powershell
(Get-Date -Year 2020 -Month 12 -Day 31).DayOfYear
```</maml:para>
          <maml:para>```Output
366
```</maml:para>
          <maml:para>`Get-Date` uses three parameters to specify the date: **Year**, **Month**, and **Day**. The command
is wrapped with parentheses so that the result is evaluated by the **DayofYear** property.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
      <command:example>
        <maml:title>--------- Example 6: Example 6: Check if a date is adjusted for daylight saving time ---------</maml:title>
        <maml:introduction>
          <maml:para>This example uses a boolean method to verify if a date is adjusted by daylight saving time.</maml:para>
          <maml:para>```powershell
$DST = Get-Date
$DST.IsDaylightSavingTime()
```</maml:para>
          <maml:para>```Output
True
```</maml:para>
          <maml:para>A variable, `$DST` stores the result of `Get-Date`. `$DST` uses the **IsDaylightSavingTime** method
to test if the date is adjusted for daylight saving time.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
      <command:example>
        <maml:title>--------- Example 7: Example 7: Convert the current time to UTC time ---------</maml:title>
        <maml:introduction>
          <maml:para>In this example, the current time is converted to UTC time. The UTC offset for the system's locale
is used to convert the time. A table in the [Notes](#notes) section lists the valid **UFormat**
format specifiers.</maml:para>
          <maml:para>```powershell
Get-Date -UFormat "%A %B/%d/%Y %T %Z"
$Time = Get-Date
$Time.ToUniversalTime()
```</maml:para>
          <maml:para>```Output
Wednesday June/26/2019 10:45:26 -07</maml:para>
          <maml:para>Wednesday, June 26, 2019 17:45:26
```</maml:para>
          <maml:para>`Get-Date` uses the **UFormat** parameter with format specifiers to display the current system date
and time. The format specifier **%Z** represents the UTC offset of **-07**.</maml:para>
          <maml:para>The `$Time` variable stores the current system date and time. `$Time` uses the `ToUniversalTime()`
method to convert the time based on the computer's UTC offset.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
      <command:example>
        <maml:title>--------- Example 8: Example 8: Create a timestamp ---------</maml:title>
        <maml:introduction>
          <maml:para>In this example, a format specifier creates a timestamp **String** object for a directory name. The
timestamp includes the date, time, and UTC offset.</maml:para>
          <maml:para>```powershell
$timestamp = Get-Date -Format o | ForEach-Object { $_ -replace ":", "." }
New-Item -Path C:\Test\$timestamp -Type Directory
```</maml:para>
          <maml:para>```Output
    Directory: C:\Test</maml:para>
          <maml:para>Mode                LastWriteTime         Length Name
----                -------------         ------ ----
d-----         6/27/2019    07:59                2019-06-27T07.59.24.4603750-07.00
```</maml:para>
          <maml:para>The `$timestamp` variable stores the results of a `Get-Date` command. `Get-Date` uses the **Format**
parameter with the format specifier of lowercase `o` to create a timestamp **String** object. The
object is sent down the pipeline to `ForEach-Object`. A **ScriptBlock** contains the `$_` variable
that represents the current pipeline object. The timestamp string is delimited by colons that are
replaced by periods.</maml:para>
          <maml:para>`New-Item` uses the **Path** parameter to specify the location for a new directory. The path
includes the `$timestamp` variable as the directory name. The **Type** parameter specifies that a
directory is created.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
      <command:example>
        <maml:title>--------- Example 9: Example 9: Convert a Unix timestamp ---------</maml:title>
        <maml:introduction>
          <maml:para>This example converts a Unix time (represented by the number of seconds since 1970-01-01 0:00:00) to
DateTime.</maml:para>
          <maml:para>```powershell
Get-Date -UnixTimeSeconds 1577836800
```</maml:para>
          <maml:para>```Output
Wednesday, January 01, 2020 12:00:00 AM
```</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
      <command:example>
        <maml:title>--------- Example 10: Example 10: Return a date value interpreted as UTC ---------</maml:title>
        <maml:introduction>
          <maml:para>This example shows how to interpret a date value as its UTC equivalent. For the example, this
machine is set to **Pacific Standard Time**. By default, `Get-Date` returns values for that
timezone. Use the **AsUTC** parameter to convert the value to the UTC equivalent time.</maml:para>
          <maml:para>```powershell
PS&gt; Get-TimeZone</maml:para>
          <maml:para>Id                         : Pacific Standard Time
DisplayName                : (UTC-08:00) Pacific Time (US &amp; Canada)
StandardName               : Pacific Standard Time
DaylightName               : Pacific Daylight Time
BaseUtcOffset              : -08:00:00
SupportsDaylightSavingTime : True</maml:para>
          <maml:para>PS&gt; (Get-Date -Date "2020-01-01T00:00:00").Kind
Unspecified</maml:para>
          <maml:para>PS&gt; Get-Date -Date "2020-01-01T00:00:00"</maml:para>
          <maml:para>Wednesday, January 1, 2020 12:00:00 AM</maml:para>
          <maml:para>PS&gt; (Get-Date -Date "2020-01-01T00:00:00" -AsUTC).Kind
Utc</maml:para>
          <maml:para>PS&gt; Get-Date -Date "2020-01-01T00:00:00" -AsUTC</maml:para>
          <maml:para>Wednesday, January 1, 2020 8:00:00 AM
```</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
      <command:example>
        <maml:title>--------- Example 11: Example 11: Show invariant culture ---------</maml:title>
        <maml:introduction>
          <maml:para>The `ToString()` converts a **DateTime** object a **String** using the current culture setting.
However, PowerShell expression interpretation always uses the invariant culture setting.</maml:para>
          <maml:para>For example, on a system with the `en-US` culture in effect, the `ToString()` method formats the
date using the `en-US` culture settings.</maml:para>
          <maml:para>```powershell
# Get date using current culture en-US
(Get-Date 2024-03-19).ToString()
```</maml:para>
          <maml:para>```Output
3/19/2024 12:00:00 AM
```</maml:para>
          <maml:para>```powershell
# Get date using invariant culture
"$(Get-Date 2024-03-19)"
```</maml:para>
          <maml:para>```Output
03/19/2024 00:00:00
```</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>ForEach-Object</maml:linkText>
        <command:uri>../Microsoft.PowerShell.Core/ForEach-Object.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Culture</maml:linkText>
        <command:uri>Get-Culture.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Member</maml:linkText>
        <command:uri>Get-Member.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-Item</maml:linkText>
        <command:uri>../Microsoft.PowerShell.Management/New-Item.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-TimeSpan</maml:linkText>
        <command:uri>New-TimeSpan.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-Date</maml:linkText>
        <command:uri>Set-Date.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-Culture</maml:linkText>
        <command:uri>xref:International.Set-Culture</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
</helpItems>