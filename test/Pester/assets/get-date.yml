metadata:
  document type: cmdlet
  external help file: Microsoft.PowerShell.Commands.Utility.dll-Help.xml
  HelpUri: https://go.microsoft.com/fwlink/?LinkID=2096615
  Locale: en-US
  Module Name: Microsoft.PowerShell.Utility
  ms.date: 03/05/2025
  PlatyPS schema version: 2024-05-01
  title: Get-Date
title: Get-Date
synopsis: Gets the current date and time.
syntaxes:
- commandName: Get-Date
  parameterSetName: DateAndFormat
  isDefault: true
  parameters:
  - '[[-Date] <datetime>]'
  - '[-Year <int>]'
  - '[-Month <int>]'
  - '[-Day <int>]'
  - '[-Hour <int>]'
  - '[-Minute <int>]'
  - '[-Second <int>]'
  - '[-Millisecond <int>]'
  - '[-DisplayHint <DisplayHintType>]'
  - '[-Format <string>]'
  - '[-AsUTC]'
- commandName: Get-Date
  parameterSetName: DateAndUFormat
  isDefault: false
  parameters:
  - '[[-Date] <datetime>]'
  - '[-Year <int>]'
  - '[-Month <int>]'
  - '[-Day <int>]'
  - '[-Hour <int>]'
  - '[-Minute <int>]'
  - '[-Second <int>]'
  - '[-Millisecond <int>]'
  - '[-DisplayHint <DisplayHintType>]'
  - -UFormat <string>
  - '[-AsUTC]'
- commandName: Get-Date
  parameterSetName: UnixTimeSecondsAndFormat
  isDefault: false
  parameters:
  - -UnixTimeSeconds <long>
  - '[-Year <int>]'
  - '[-Month <int>]'
  - '[-Day <int>]'
  - '[-Hour <int>]'
  - '[-Minute <int>]'
  - '[-Second <int>]'
  - '[-Millisecond <int>]'
  - '[-DisplayHint <DisplayHintType>]'
  - '[-Format <string>]'
  - '[-AsUTC]'
- commandName: Get-Date
  parameterSetName: UnixTimeSecondsAndUFormat
  isDefault: false
  parameters:
  - -UnixTimeSeconds <long>
  - '[-Year <int>]'
  - '[-Month <int>]'
  - '[-Day <int>]'
  - '[-Hour <int>]'
  - '[-Minute <int>]'
  - '[-Second <int>]'
  - '[-Millisecond <int>]'
  - '[-DisplayHint <DisplayHintType>]'
  - -UFormat <string>
  - '[-AsUTC]'
aliases: ''
description: |-
  The `Get-Date` cmdlet gets a DateTime object that represents the current date or a date that you specify.
  
  `Get-Date` can format the date and time in several .NET and UNIX formats.
  
  You can use `Get-Date` to generate a date or time character string, and then send the string to other cmdlets or programs.
  
  
  
  `Get-Date` uses the computer's culture settings to determine how the output is formatted.
  
  To view your computer's settings, use `(Get-Culture).DateTimeFormat`.
examples:
- title: Get the current date and time
  description: >-
    Get-Date


    Tuesday, June 25, 2019 14:53:32
- title: Get elements of the current date and time
  description: >-
    Get-Date -DisplayHint Date


    Tuesday, June 25, 2019


    `Get-Date` uses the DisplayHint parameter with the Date argument to get only the date.
- title: Get the date and time with a .NET format specifier
  description: >-
    Get-Date -Format "dddd MM/dd/yyyy HH:mm K"


    Tuesday 06/25/2019 16:17 -07:00


    `Get-Date` uses the Format parameter to specify several format specifiers.


    The .NET format specifiers used in this example are defined as follows:


    | Specifier |                      Definition                       | | --------- | ----------------------------------------------------- | | `dddd`    | Day of the week - full name                           | | `MM`      | Month number                                          | | `dd`      | Day of the month - 2 digits                           | | `yyyy`    | Year in 4-digit format                                | | `HH:mm`   | Time in 24-hour format - no seconds                   | | `K`       | Time zone offset from Universal Time Coordinate (UTC) |


    For more information about .NET format specifiers, see Custom date and time format strings (/dotnet/standard/base-types/custom-date-and-time-format-strings?view=netframework-4.8).
- title: Get the date and time with a UFormat specifier
  description: >-
    Get-Date -UFormat "%A %m/%d/%Y %R %Z"


    Tuesday 06/25/2019 16:19 -07


    `Get-Date` uses the UFormat parameter to specify several format specifiers.


    The UFormat format specifiers used in this example are defined as follows:


    | Specifier |                      Definition                       | | --------- | ----------------------------------------------------- | | `%A`      | Day of the week - full name                           | | `%m`      | Month number                                          | | `%d`      | Day of the month - 2 digits                           | | `%Y`      | Year in 4-digit format                                | | `%R`      | Time in 24-hour format - no seconds                   | | `%Z`      | Time zone offset from Universal Time Coordinate (UTC) |


    For a list of valid UFormat format specifiers, see the Notes (#notes)section.
- title: Get a date's day of the year
  description: >-
    (Get-Date -Year 2020 -Month 12 -Day 31).DayOfYear


    366


    `Get-Date` uses three parameters to specify the date: Year , Month , and Day .

    The command is wrapped with parentheses so that the result is evaluated by the DayofYear property.
- title: Check if a date is adjusted for daylight savings time
  description: >-
    $DST = Get-Date

    $DST.IsDaylightSavingTime()


    True


    A variable, `$DST` stores the result of `Get-Date`.

    `$DST` uses the IsDaylightSavingTime method to test if the date is adjusted for daylight savings time.
- title: Convert the current time to UTC time
  description: >-
    Get-Date -UFormat "%A %B/%d/%Y %T %Z"

    $Time = Get-Date

    $Time.ToUniversalTime()


    Wednesday June/26/2019 10:45:26 -07


    Wednesday, June 26, 2019 17:45:26


    `Get-Date` uses the UFormat parameter with format specifiers to display the current system date and time.

    The format specifier %Z represents the UTC offset of -07 .


    The `$Time` variable stores the current system date and time.

    `$Time` uses the ToUniversalTime() method to convert the time based on the computer's UTC offset.
- title: Create a timestamp
  description: >-
    $timestamp = Get-Date -Format o | ForEach-Object { $_ -replace ":", "." }

    New-Item -Path C:\Test\$timestamp -Type Directory


    Directory: C:\Test


    Mode                LastWriteTime         Length Name

    ----                -------------         ------ ----

    d-----         6/27/2019    07:59                2019-06-27T07.59.24.4603750-07.00


    The `$timestamp` variable stores the results of a `Get-Date` command.

    `Get-Date` uses the Format parameter with the format specifier of lowercase `o` to create a timestamp String object.

    The object is sent down the pipeline to `ForEach-Object`.

    A ScriptBlock contains the `$_` variable that represents the current pipeline object.

    The timestamp string is delimited by colons that are replaced by periods.


    `New-Item` uses the Path parameter to specify the location for a new directory.

    The path includes the `$timestamp` variable as the directory name.

    The Type parameter specifies that a directory is created.
- title: Convert a Unix timestamp
  description: >-
    Get-Date -UnixTimeSeconds 1577836800


    Wednesday, January 01, 2020 12:00:00 AM
- title: Return a date value interpreted as UTC
  description: >-
    PS> Get-TimeZone


    Id                         : Pacific Standard Time

    DisplayName                : (UTC-08:00) Pacific Time (US & Canada)

    StandardName               : Pacific Standard Time

    DaylightName               : Pacific Daylight Time

    BaseUtcOffset              : -08:00:00

    SupportsDaylightSavingTime : True


    PS> (Get-Date -Date "2020-01-01T00:00:00").Kind

    Unspecified


    PS> Get-Date -Date "2020-01-01T00:00:00"


    Wednesday, January 1, 2020 12:00:00 AM


    PS> (Get-Date -Date "2020-01-01T00:00:00" -AsUTC).Kind

    Utc


    PS> Get-Date -Date "2020-01-01T00:00:00" -AsUTC


    Wednesday, January 1, 2020 8:00:00 AM
parameters:
- name: AsUTC
  type: System.Management.Automation.SwitchParameter
  description: >-
    Converts the date value to the equivalent time in UTC.


    This parameter was introduced in PowerShell 7.1.
  defaultValue: False
  supportsWildcards: false
  isDynamic: false
  aliases: ''
  dontShow: false
  acceptedValues: []
  parameterSets:
  - &o0
    name: (All)
    position: Named
    isRequired: false
    valueFromPipeline: false
    valueFromPipelineByPropertyName: false
    valueFromRemainingArguments: false
  helpMessage: ''
- name: Date
  type: System.DateTime
  description: >-
    Specifies a date and time.

    Time is optional and if not specified, returns 00:00:00.


    Enter the date and time in a format that is standard for the system locale.


    For example, in US English:


    `Get-Date -Date "6/25/2019 12:30:22"` returns Tuesday, June 25, 2019 12:30:22
  defaultValue: None
  supportsWildcards: false
  isDynamic: false
  aliases: LastWriteTime
  dontShow: false
  acceptedValues: []
  parameterSets:
  - name: DateAndFormat
    position: 0
    isRequired: false
    valueFromPipeline: true
    valueFromPipelineByPropertyName: true
    valueFromRemainingArguments: false
  - name: DateAndUFormat
    position: 0
    isRequired: false
    valueFromPipeline: true
    valueFromPipelineByPropertyName: true
    valueFromRemainingArguments: false
  helpMessage: ''
- name: Day
  type: System.Int32
  description: >-
    Specifies the day of the month that is displayed.

    Enter a value from 1 to 31.


    If the specified value is greater than the number of days in a month, PowerShell adds the number of days to the month.

    For example, `Get-Date -Month 2 -Day 31` displays March 3 , not February 31 .
  defaultValue: None
  supportsWildcards: false
  isDynamic: false
  aliases: ''
  dontShow: false
  acceptedValues: []
  parameterSets:
  - *o0
  helpMessage: ''
- name: DisplayHint
  type: Microsoft.PowerShell.Commands.DisplayHintType
  description: >-
    Determines which elements of the date and time are displayed.


    The accepted values are as follows:


    - Date : displays only the date - Time : displays only the time - DateTime : displays the date and time
  defaultValue: None
  supportsWildcards: false
  isDynamic: false
  aliases: ''
  dontShow: false
  acceptedValues: []
  parameterSets:
  - *o0
  helpMessage: ''
- name: Format
  type: System.String
  description: >-
    Displays the date and time in the Microsoft .NET Framework format indicated by the format specifier.

    The Format parameter outputs a String object.


    For a list of available .NET format specifiers, see Custom date and time format strings (/dotnet/standard/base-types/custom-date-and-time-format-strings?view=netframework-4.8).


    When the Format parameter is used, `Get-Date` only gets the DateTime object's properties necessary to display the date.

    As a result, some of the properties and methods of DateTime objects might not be available.


    Starting in PowerShell 5.0, you can use the following additional formats as values for the Format parameter.


    - FileDate .

    A file or path-friendly representation of the current date in local time.

    The format   is `yyyyMMdd` (case-sensitive, using a 4-digit year, 2-digit month, and 2-digit day).

    For example:   20190627.


    - FileDateUniversal .

    A file or path-friendly representation of the current date in universal   time (UTC).

    The format is `yyyyMMddZ` (case-sensitive, using a 4-digit year, 2-digit month,   2-digit day, and the letter `Z` as the UTC indicator).

    For example: 20190627Z.


    - FileDateTime .

    A file or path-friendly representation of the current date and time in local   time, in 24-hour format.

    The format is `yyyyMMddTHHmmssffff` (case-sensitive, using a 4-digit   year, 2-digit month, 2-digit day, the letter `T` as a time separator, 2-digit hour, 2-digit   minute, 2-digit second, and 4-digit millisecond).

    For example: 20190627T0840107271.


    - FileDateTimeUniversal .

    A file or path-friendly representation of the current date and time in   universal time (UTC), in 24-hour format.

    The format is `yyyyMMddTHHmmssffffZ` (case-sensitive,   using a 4-digit year, 2-digit month, 2-digit day, the letter `T` as a time separator, 2-digit   hour, 2-digit minute, 2-digit second, 4-digit millisecond, and the letter `Z` as the UTC   indicator).

    For example: 20190627T1540500718Z.
  defaultValue: None
  supportsWildcards: false
  isDynamic: false
  aliases: ''
  dontShow: false
  acceptedValues: []
  parameterSets:
  - name: DateAndFormat
    position: Named
    isRequired: false
    valueFromPipeline: false
    valueFromPipelineByPropertyName: false
    valueFromRemainingArguments: false
  - name: UnixTimeSecondsAndFormat
    position: Named
    isRequired: false
    valueFromPipeline: false
    valueFromPipelineByPropertyName: false
    valueFromRemainingArguments: false
  helpMessage: ''
- name: Hour
  type: System.Int32
  description: >-
    Specifies the hour that is displayed.

    Enter a value from 0 to 23.
  defaultValue: None
  supportsWildcards: false
  isDynamic: false
  aliases: ''
  dontShow: false
  acceptedValues: []
  parameterSets:
  - *o0
  helpMessage: ''
- name: Millisecond
  type: System.Int32
  description: >-
    Specifies the milliseconds in the date.

    Enter a value from 0 to 999.


    This parameter was introduced in PowerShell 3.0.
  defaultValue: None
  supportsWildcards: false
  isDynamic: false
  aliases: ''
  dontShow: false
  acceptedValues: []
  parameterSets:
  - *o0
  helpMessage: ''
- name: Minute
  type: System.Int32
  description: >-
    Specifies the minute that is displayed.

    Enter a value from 0 to 59.
  defaultValue: None
  supportsWildcards: false
  isDynamic: false
  aliases: ''
  dontShow: false
  acceptedValues: []
  parameterSets:
  - *o0
  helpMessage: ''
- name: Month
  type: System.Int32
  description: >-
    Specifies the month that is displayed.

    Enter a value from 1 to 12.
  defaultValue: None
  supportsWildcards: false
  isDynamic: false
  aliases: ''
  dontShow: false
  acceptedValues: []
  parameterSets:
  - *o0
  helpMessage: ''
- name: Second
  type: System.Int32
  description: >-
    Specifies the second that is displayed.

    Enter a value from 0 to 59.
  defaultValue: None
  supportsWildcards: false
  isDynamic: false
  aliases: ''
  dontShow: false
  acceptedValues: []
  parameterSets:
  - *o0
  helpMessage: ''
- name: UFormat
  type: System.String
  description: >-
    Displays the date and time in UNIX format.

    The UFormat parameter outputs a string object.

    UFormat specifiers are preceded by a percent sign (`%`), for example, `%m`, `%d`, and `%Y`.

    The Notes (#notes)section contains a table of valid UFormat specifiers .


    When the UFormat parameter is used, `Get-Date` only gets the DateTime object's properties necessary to display the date.

    As a result, some of the properties and methods of DateTime objects might not be available.
  defaultValue: None
  supportsWildcards: false
  isDynamic: false
  aliases: ''
  dontShow: false
  acceptedValues: []
  parameterSets:
  - name: DateAndUFormat
    position: Named
    isRequired: true
    valueFromPipeline: false
    valueFromPipelineByPropertyName: false
    valueFromRemainingArguments: false
  - &o1
    name: UnixTimeSecondsAndUFormat
    position: Named
    isRequired: true
    valueFromPipeline: false
    valueFromPipelineByPropertyName: false
    valueFromRemainingArguments: false
  helpMessage: ''
- name: UnixTimeSeconds
  type: System.Int64
  description: >-
    Date and time represented in seconds since January 1, 1970, 0:00:00.


    This parameter was introduced in PowerShell 7.1.
  defaultValue: None
  supportsWildcards: false
  isDynamic: false
  aliases: UnixTime
  dontShow: false
  acceptedValues: []
  parameterSets:
  - name: UnixTimeSecondsAndFormat
    position: Named
    isRequired: true
    valueFromPipeline: false
    valueFromPipelineByPropertyName: false
    valueFromRemainingArguments: false
  - *o1
  helpMessage: ''
- name: Year
  type: System.Int32
  description: >-
    Specifies the year that is displayed.

    Enter a value from 1 to 9999.
  defaultValue: None
  supportsWildcards: false
  isDynamic: false
  aliases: ''
  dontShow: false
  acceptedValues: []
  parameterSets:
  - *o0
  helpMessage: ''

- name: CommonParameters
  description: |-
    This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable,
    -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable,
    -ProgressAction, -Verbose, -WarningAction, and -WarningVariable. For more information, see
    [about_CommonParameters](https://go.microsoft.com/fwlink/?LinkID=113216).
inputs:
- name: System.DateTime
  description: |-
    You can pipe a DateTime object to this cmdlet.
outputs:
- name: System.String
  description: |-
    {{ Fill in the Description }}
- name: System.DateTime
  description: |-
    {{ Fill in the Description }}
notes: |-
  DateTime objects are in long-date and long-time formats for the system locale.
  
  
  
  The valid UFormat specifiers are displayed in the following table:
  
  
  
  > [!IMPORTANT] > UFormat specifiers are changed or added in newer versions of PowerShell.
  
  For example, `%F` was > added in PowerShell 6.2, so it isn't available in Windows PowerShell 5.1 or older.
  
  Keep this in > mind when using UFormat specifiers in scripts designed to be run on multiple versions of > PowerShell.
  
  
  
  | Format specifier |                                 Meaning                     |         Example          | | ---- | ----------------------------------------------------------------------- | ------------------------ | | `%A` | Day of the week - full name                                             | Monday                   | | `%a` | Day of the week - abbreviated name                                      | Mon                      | | `%B` | Month name - full                                                       | January                  | | `%b` | Month name - abbreviated                                                | Jan                      | | `%C` | Century                                                                 | 20 for 2019              | | `%c` | Date and time - abbreviated                                             | Thu Jun 27 08:44:18 2019 | | `%D` | Date in mm/dd/yy format                                                 | 06/27/19                 | | `%d` | Day of the month - 2 digits                                             | 05                       | | `%e` | Day of the month - preceded by a space if only a single digit           | <space>5               | | `%F` | Date in YYYY-mm-dd format, equal to %Y-%m-%d (the ISO 8601 date format) | 2019-06-27               | | `%G` | ISO week date year (year containing Thursday of the week)               |                          | | `%g` | Same as 'G' - 2 digits                                                  |                          | | `%H` | Hour in 24-hour format                                                  | 17                       | | `%h` | Same as 'b'                                                             |                          | | `%I` | Hour in 12-hour format                                                  | 05                       | | `%j` | Day of the year                                                         | 1-366                    | | `%k` | Same as 'H'                                                             |                          | | `%l` | Same as 'I' (Upper-case I)                                              | 05                       | | `%M` | Minutes                                                                 | 35                       | | `%m` | Month number                                                            | 06                       | | `%n` | newline character                                                       |                          | | `%p` | AM or PM                                                                |                          | | `%R` | Time in 24-hour format -no seconds                                      | 17:45                    | | `%r` | Time in 12-hour format                                                  | 09:15:36 AM              | | `%S` | Seconds                                                                 | 05                       | | `%s` | Seconds elapsed since January 1, 1970 00:00:00 (UTC)                    | 1150451174               | | `%t` | Horizontal tab character                                                |                          | | `%T` | Time in 24-hour format                                                  | 17:45:52                 | | `%U` | Same as 'W'                                                             |                          | | `%u` | Numeric day of the week (1-7) (Changed in PowerShell 7.2)               | Monday = 1, Sunday = 7   | | `%V` | Week of the year                                                        | 01-53                    | | `%w` | Numeric day of the week (0-6)                                           | Sunday = 0, Saturday = 6 | | `%W` | Week of the year                                                        | 00-52                    | | `%X` | Same as 'T'                                                             |                          | | `%x` | Date in standard format for locale                                      | 06/27/19 for English-US  | | `%Y` | Year in 4-digit format                                                  | 2019                     | | `%y` | Year in 2-digit format                                                  | 19                       | | `%Z` | Time zone offset from Universal Time Coordinate (UTC)                   | -07                      |
  
  
  
  > [!NOTE] > The behavior of `-UFormat %s` was changed to fix problems with the behavior in Windows PowerShell.
  
  > > - The return value is based on UTC time.
  
  > - The value is a whole number of seconds value (no fractional part).
  
  
links:
- text: 'Online Version:'
  href: https://learn.microsoft.com/powershell/module/microsoft.powershell.utility/get-date?view=powershell-7.3&WT.mc_id=ps-gethelp
- text: 'ForEach-Object'
  href: 
- text: 'Get-Culture'
  href: 
- text: 'Get-Member'
  href: 
- text: 'New-Item'
  href: 
- text: 'New-TimeSpan'
  href: 
- text: 'Set-Date'
  href: 
